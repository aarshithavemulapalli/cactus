[project]
name = "cactus-llm"
version = "0.3.3"
description = "LLM Agent designed for use with cheminformatics tools."
authors = [
    { name = "Andrew McNaughton", email = "andrew.mcnaughton@pnnl.gov" }
]
maintainers = [
    { name = "Andrew McNaughton", email = "andrew.mcnaughton@pnnl.gov" }
]

license = {text = "BSD 2-Clause License"}
keywords = ["LLM", "LangChain Agent", "Cheminformatics"]
dependencies = [
    "langchain>=0.2.1",
    "langchain-community>=0.2.1",
    "transformers>=4.41.2",
    "pandas>=2.2.2",
    "accelerate>=0.30.1",
    "vllm>=0.4.2; platform_system != 'Darwin' and platform_system != 'Windows'",
    "rdkit>=2023.9.6",
    "matplotlib>=3.9.0",
    "pubchempy>=1.0.4",
    "chembl_webresource_client>=0.10.9",
    "smilite>=2.3.0",
    "torch==2.3.0",
    "torchvision==0.18.0",
    "torchaudio==2.3.0",
    "openai>=1.33.0",
    "langchain-anthropic>=0.1.15",
    "langchain-openai>=0.1.8",
    "langchain-google-genai>=1.0.6",
    "seaborn>=0.13.2",
    "adme-py>=0.1.0",
]
readme = "README.md"
requires-python = ">= 3.10"

classifiers = [
  "Development Status :: 3 - Alpha",
  "License :: OSI Approved :: BSD License",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]

[project.urls]
Homepage = "https://github.com/pnnl/cactus"
Repository = "https://github.com/pnnl/cactus.git"
Issues = "https://github.com/pnnl/cactus/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.rye]
managed = true
dev-dependencies = [
  "ruff>=0.4.7",
  "isort>=5.13.2",
  "mypy>=1.10.0",
  "python-lsp-server>=1.11.0",
  "python-lsp-ruff>=2.2.1",
  "pylsp-mypy>=0.6.8",
  "pyroma>=4.2",
  "pytest>=8.2.1",
]

[[tool.rye.sources]]
name = "pytorch"
url = "https://download.pytorch.org/whl/cu121"
  
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100
include_trailing_comma = true
reverse_relative = true

[tool.ruff]
preview = true
respect-gitignore = true
unsafe-fixes = false
show-fixes = true

# Same as Black.
line-length = 100
indent-width = 4

# Assume Python 3.11.x
target-version = "py311"

[tool.ruff.lint]
select = [
  # mccabe
  "C90",
  # flake-8 comprehensions
  "C4",
  # pycodestyle
  "E", # Error
  "W", # Warning
  # PyFlakes
  "F",
  # flake8-bugbear
  "B",
  # flake8-simplify
  "SIM",
  # isort
  "I",
  # type checking
  "TCH",
  # flake8-print
  "T2",
  # pep8-naming
  "N",
  # pydocstyle
  "D",
  # flake8-bandit
  "S",
]

exclude = [
  ".tox",
  ".git",
  "__pycache__",
  "build",
  "dist",
  "tests/fixtures/*",
  "*.pyc",
  "*.egg-info",
  ".cache",
  ".eggs",
  "data",
]

# 1. Enable flake8-bugbear (`B`) rules, in addition to the defaults.
# select = ["E4", "E7", "E9", "F", "B"]

# 2. Avoid enforcing line-length violations (`E501`)
ignore = ["E501","D203", "D213", "S101"]

# 3. Avoid trying to fix flake8-bugbear (`B`) violations.
unfixable = ["B"]

# 4. Ignore `E402` (import violations) in all `__init__.py` files, and in select subdirectories.
[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402"]
"tests/**" = ["S101"]
"**/{tests,docs,tools}/*" = ["E402"]

[tool.ruff.format]
# Like Black, use double quotes for non-triple-quoted strings.
quote-style = "double"
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.mccabe]
max-complexity = 20

[tool.mypy]
ignore_missing_imports = true

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["src/cactus"]
